buildscript {
    project.ext {
        bootVersion = '1.3.1.RELEASE'
    }
    repositories {
        maven { url 'http://repo.spring.io/libs-snapshot' }
        mavenLocal()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${project.bootVersion}"
        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}

apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'docker'
apply plugin: 'pmd'
apply plugin: 'findbugs'

group = 'aglover'

jar {
    baseName = 'gs-spring-boot-docker'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
    maven { url 'http://repo.spring.io/libs-snapshot' }
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web:${project.bootVersion}")
    compile("org.springframework.boot:spring-boot-starter-jetty:${project.bootVersion}")
    compile("org.springframework.boot:spring-boot-starter-data-mongodb:${project.bootVersion}")
    compile("org.projectlombok:lombok:1.16.2")
    compile("io.springfox:springfox-swagger-ui:2.2.2")
    compile("io.springfox:springfox-swagger2:2.2.2")
    testCompile("junit:junit:4.11")
}


sourceCompatibility = 1.8
targetCompatibility = 1.8

task buildDocker(type: Docker, dependsOn: build) {
 //   push = true
    applicationName = jar.baseName
    dockerfile = file('src/main/docker/Dockerfile')

    doFirst {
        copy {
            from jar
            into stageDir
        }
    }

}

task wrapper(type: Wrapper) {
    gradleVersion = '2.10'
}